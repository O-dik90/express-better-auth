generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  name          String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  emailVerified Boolean
  image         String?   @db.Text
  accounts      Account[]
  sessions      Session[]

  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String   @unique
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?  @db.Text
  userAgent String?  @db.Text
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "session_userId_fkey")
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String    @db.Text
  providerId            String    @db.Text
  userId                String
  accessToken           String?   @db.Text
  refreshToken          String?   @db.Text
  idToken               String?   @db.Text
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?   @db.Text
  password              String?   @db.Text
  createdAt             DateTime
  updatedAt             DateTime
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "account_userId_fkey")
  @@map("account")
}

model Verification {
  id         String    @id
  identifier String    @db.Text
  value      String    @db.Text
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}

model ComponentProposal {
  id          String   @id @default(cuid())
  name        String
  category    String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("component_proposal")
}

model TemplateProposal {
  id           String       @id @default(cuid())
  name         String       @unique
  masterId     String
  description  String?
  bab1         String?      @db.LongText
  bab2         String?      @db.LongText
  bab3         String?      @db.LongText
  bab4         String?      @db.LongText
  bab5         String?      @db.LongText
  luaran       String?      @db.LongText
  lampiran     String?      @db.LongText
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  masterGenpro MasterGenpro @relation(fields: [masterId], references: [id], onDelete: Cascade)

  @@index([masterId], map: "template_proposal_masterId_fkey")
  @@map("template_proposal")
}

model MasterGenpro {
  id               String             @id @default(cuid())
  name             String
  init             String
  description      String?
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  TemplateProposal TemplateProposal[]

  @@map("master_genpro")
}
